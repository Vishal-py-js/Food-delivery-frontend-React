[{"G:\\frontend\\src\\index.js":"1","G:\\frontend\\src\\App.js":"2","G:\\frontend\\src\\reportWebVitals.js":"3","G:\\frontend\\src\\Cart.js":"4","G:\\frontend\\src\\Store.js":"5","G:\\frontend\\src\\Login.js":"6","G:\\frontend\\src\\Signup.js":"7","G:\\frontend\\src\\SignUp.js":"8","G:\\frontend\\src\\Constants.js":"9","G:\\frontend\\src\\Sidebar.js":"10","G:\\frontend\\src\\CategorizedItem.js":"11","G:\\frontend\\src\\Checkout.js":"12","G:\\frontend\\src\\redux\\Action.js":"13","G:\\frontend\\src\\redux\\Actiontype.js":"14","G:\\frontend\\src\\reduxstore.js":"15","G:\\frontend\\src\\redux\\ActionReducer.js":"16"},{"size":503,"mtime":1613218199061,"results":"17","hashOfConfig":"18"},{"size":1380,"mtime":1614243429287,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1613218209462,"results":"20","hashOfConfig":"18"},{"size":4906,"mtime":1614249400716,"results":"21","hashOfConfig":"18"},{"size":3369,"mtime":1614345325042,"results":"22","hashOfConfig":"18"},{"size":1889,"mtime":1613218203761,"results":"23","hashOfConfig":"18"},{"size":2159,"mtime":1612105217222,"results":"24","hashOfConfig":"25"},{"size":2178,"mtime":1613218219262,"results":"26","hashOfConfig":"18"},{"size":265,"mtime":1614422510248,"results":"27","hashOfConfig":"18"},{"size":925,"mtime":1613218217213,"results":"28","hashOfConfig":"18"},{"size":2852,"mtime":1613466999438,"results":"29","hashOfConfig":"18"},{"size":7445,"mtime":1614417539450,"results":"30","hashOfConfig":"18"},{"size":636,"mtime":1614246964072,"results":"31","hashOfConfig":"18"},{"size":50,"mtime":1614241403904,"results":"32","hashOfConfig":"18"},{"size":314,"mtime":1614517430518,"results":"33","hashOfConfig":"18"},{"size":359,"mtime":1614245958057,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1rjk869",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11weeoh",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"G:\\frontend\\src\\index.js",[],["72","73"],"G:\\frontend\\src\\App.js",[],"G:\\frontend\\src\\reportWebVitals.js",[],"G:\\frontend\\src\\Cart.js",["74","75","76","77","78","79"],"import React, {useState, useEffect} from 'react'\r\nimport arrowup from './arrow-up.png'\r\nimport arrowdown from './arrow-down.png'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport BaseURL from './Constants'\r\n\r\n\r\nfunction Cart() {\r\n\r\n    const[cart, setCart] = useState([])\r\n\r\n    useEffect(() => {\r\n        getCartItems()\r\n        \r\n    }, [])\r\n\r\n\r\n    const getCartItems = async() => {\r\n        const data = await axios.get(`${BaseURL}order-items/`,{\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        // console.log(data.data)\r\n        document.getElementById(\"cart-total\").innerHTML = data.data.length\r\n        localStorage.setItem('item-count', data.data.length)\r\n        await setCart(data.data)\r\n        let innhtml = document.getElementById('user-status')\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = '<a href=\"/login\" class=\"btn btn-warning\">Logout</a>'\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        } else {\r\n            innhtml.innerHTML = \"LogIn\"\r\n        }\r\n    }\r\n\r\n\r\n    const increaseItem = async(cartitem) => {\r\n        await axios.put(`${BaseURL}cart/${cartitem.id}/`, {quantity: cartitem.quantity+1}, {\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        window.location.reload()\r\n    }\r\n\r\n    const decreaseItem = async(cartitem) => {\r\n        if(cartitem.quantity == 1){\r\n            await axios.delete(`${BaseURL}cart/${cartitem.id}/`, {\r\n                headers:{\r\n                    'Authorization': `Token ${localStorage.getItem('Token')}`\r\n                }\r\n            })\r\n        }else {\r\n            await axios.put(`${BaseURL}cart/${cartitem.id}/`, {quantity: cartitem.quantity-1}, {\r\n                headers:{\r\n                    'Authorization': `Token ${localStorage.getItem('Token')}`\r\n                }\r\n            })\r\n        }\r\n        window.location.reload()\r\n    }\r\n\r\n    let sumtotal = 0\r\n    cart.map((item)=>{\r\n        sumtotal += item.get_total\r\n    })\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-lg-12'>\r\n                    <a className='btn btn-outline-dark' href='/'>&#x2190; Continue Ordering</a>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    \r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th><h5>Items: <strong>{localStorage.getItem('item-count')}</strong></h5></th>\r\n                                <th><h5>Total: <strong>Rs {sumtotal}</strong></h5></th>\r\n                                <a style={{float: 'right', margin: '5px'}} className=\"btn btn-success\" href=\"/checkout/\">Checkout</a>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <div className='cart-box-element'>\r\n                    <div className='cart-row'>\r\n                    <div style={{flex: 2}}></div>\r\n                        <div style={{flex: 2}}><strong>Item</strong></div>\r\n                        <div style={{flex: 1}}><strong>Price</strong></div>\r\n                        <div style={{flex: 1}}><strong>Quantity</strong></div>\r\n                        <div style={{flex: 1}}><strong>Total</strong></div>\r\n                    </div>\r\n                    {\r\n                        cart.map(cartitem => (\r\n                            <div className='cart-row' key={cartitem.item.id}>\r\n                                <div style={{flex: \"2\"}}><img className=\"row-image\" src={cartitem.item.image}/></div>\r\n                                <div style={{flex: \"2\"}}>{cartitem.item.title}</div>\r\n                                <div style={{flex: \"1\"}}>Rs {cartitem.item.price}</div>\r\n                                <div style={{flex: \"1\"}}>\r\n                                <p className='quantity'>{cartitem.quantity}</p>\r\n                                    <div className='quantity'>\r\n                                        <img onClick={() => increaseItem(cartitem)} className=\"chg-quantity update-cart\" src={arrowup}></img>\r\n                                        <img onClick={() => decreaseItem(cartitem)} className=\"chg-quantity update-cart\" src={arrowdown}></img>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{flex: \"1\"}}>{cartitem.quantity * cartitem.item.price}</div>\r\n                                <h3></h3>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","G:\\frontend\\src\\Store.js",["80"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport BaseURL from './Constants'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"\r\n\r\n\r\nconst Store = () => {\r\n\r\n    const[products, setProducts] = useState([])\r\n    const[id, setId] = useState('')\r\n    const[loading, setLoading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        getProducts()\r\n        .then(()=>{\r\n            setLoading(false)\r\n        })\r\n        getUser()\r\n    }, [])\r\n\r\n    const getProducts = async() => {\r\n        const data = await axios.get(BaseURL)\r\n        // console.log(data.data)\r\n        setProducts(data.data.Item)\r\n    }\r\n\r\n    const getUser = async() => {\r\n        const data = await axios.get(`${BaseURL}users/`,{\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        // console.log(data.data[0].id)\r\n        // console.log(data.data[0].username)\r\n        let user = data.data[0].username\r\n        setId(data.data[0].id)\r\n        localStorage.setItem('user-id', data.data[0].id)\r\n\r\n        document.getElementById('cart-total').innerHTML = localStorage.getItem('item-count')\r\n        let innhtml = document.getElementById('user-status')\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = `<strong>${user}</strong> <a href=\"/login\" class=\"btn btn-warning\">Logout</a>`\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        } \r\n    }\r\n\r\n\r\n    const addToCart = async(slug, id) => {\r\n        await axios.post(`${BaseURL}add-to-cart/`, {slug, id},\r\n        {\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        }\r\n            )\r\n        window.location.reload()\r\n    }\r\n\r\n    return ( \r\n        <div className='container' id=\"page-wrap\">\r\n            <div className='row'>\r\n                {\r\n                    products.map(product => (\r\n                        <div key={product.id} className='col-lg-3'>\r\n                            <img className='thumbnail' src={product.image}></img>\r\n                            <div className='box-element product'>\r\n                                <h6><strong>{product.title}</strong></h6>\r\n                                <hr></hr>\r\n                                <button onClick={()=>addToCart(product.slug, id)} className=\"btn btn-outline-secondary add-btn\">Add to Cart</button>\r\n                                {/* <a className='btn btn-outline-success'>View</a> */}\r\n                                <h6 id='price'>Rs {product.price}</h6>\r\n                            </div>\r\n                            <hr/>\r\n                        </div>\r\n                    ))   \r\n                }\r\n                {\r\n                    loading?<div id='loader'>\r\n                        <Loader type=\"Bars\" color=\"Grey\" height={100} width={100} timeout={15000} \r\n                        />\r\n                        <p>The backend is hosted on heroku with free dynos which goes to sleep after 30 minutes of inactivity. It might take a while to completely load this page, Please hang in there.</p>\r\n                            </div>:''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","G:\\frontend\\src\\Login.js",[],"G:\\frontend\\src\\Signup.js",["81","82"],"G:\\frontend\\src\\SignUp.js",[],"G:\\frontend\\src\\Constants.js",[],"G:\\frontend\\src\\Sidebar.js",[],"G:\\frontend\\src\\CategorizedItem.js",["83","84"],"import React, {useState, useEffect} from 'react'\r\nimport './App.css';\r\nimport axios from 'axios'\r\nimport BaseURL from './Constants'\r\n\r\n\r\nfunction CategorizedItem() {\r\n\r\n    const[filtereditems, setFilteredItems] = useState([])\r\n    const[length, setLength] = useState('')\r\n    const[userid, setUserId] = useState('')\r\n\r\n    useEffect(() => {\r\n        \r\n        getItems()\r\n        getUser()\r\n    }, [])\r\n    \r\n    const getItems = () => {\r\n        let id = localStorage.getItem('sectionid')\r\n        axios.post(`${BaseURL}filteritem/`, {id: id})\r\n        .then(res => {\r\n            setFilteredItems(res.data)\r\n            setLength(res.data.length)\r\n            // console.log(res.data.length)\r\n        })\r\n        document.getElementById('cart-total').innerHTML = localStorage.getItem('item-count')\r\n        let innhtml = document.getElementById('user-status')\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = '<a href=\"/login\" class=\"btn btn-warning\">Logout</a>'\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        }\r\n    }\r\n\r\n    const getUser = async() => {\r\n        \r\n        const data = await axios.get(`${BaseURL}users/`,{\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        // console.log(data.data[0].id)\r\n        // console.log(data.data[0].username)        \r\n        setUserId(data.data[0].id)\r\n    }\r\n\r\n    const addToCart = async(product) => {\r\n        await axios.post(`${BaseURL}add-to-cart/`, {\r\n            slug: product.slug,\r\n            id: userid\r\n        },\r\n        {\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        }\r\n            )\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div className='container' id=\"page-wrap\">\r\n            <h5>Found {length} items</h5>\r\n            <div className='row'>\r\n                {\r\n                    filtereditems.map(product => (\r\n                        <div key={product.id} className='col-lg-4'>\r\n                            <img className='thumbnail' src={product.image}></img>\r\n                            <div className='box-element product'>\r\n                                <h6><strong>{product.title}</strong></h6>\r\n                                <hr></hr>\r\n                                <button onClick={()=>addToCart(product)} className=\"btn btn-outline-secondary add-btn\">Add to Cart</button>\r\n                                <a className='btn btn-outline-success'>View</a>\r\n                                <h6 id='price'>Rs {product.price}</h6>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategorizedItem\r\n","G:\\frontend\\src\\Checkout.js",["85","86","87","88"],"import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './App.css'\r\nimport BaseURL from './Constants'\r\nimport {fetchitems} from './redux/Action'\r\n\r\nfunction Checkout({itemData, fetchitems}) {\r\n\r\n    const[myaddress, setMyAddress] = useState({\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zipcode: '',\r\n        user: localStorage.getItem('user-id')\r\n    })\r\n\r\n    useEffect(() => {\r\n        getAddresses()\r\n        fetchitems()\r\n        let innhtml = document.getElementById('user-status')\r\n        // document.getElementById('cart-icon').src = './cart.png'\r\n        document.getElementById('home').innerHTML = ''\r\n        document.getElementById('cartt').innerHTML = ''\r\n        document.getElementById(\"cart-total\").innerHTML = ''\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = '<a href=\"/login\" class=\"btn btn-warning\">Logout</a>'\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        } else {\r\n            innhtml.innerHTML = \"LogIn\"\r\n        }\r\n        \r\n    }, [])\r\n    \r\n    const[prevAddress, setPrevAddress] = useState([])\r\n\r\n    const getAddresses = () => {\r\n        axios.get(`${BaseURL}address/`, {\r\n            headers: {\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        .then(response => \r\n            setPrevAddress(response.data) \r\n        )\r\n    }\r\n\r\n    // document.getElementById(\"cart-total\").innerHTML = data.data.length\r\n    // localStorage.setItem('item-count', data.data.length)\r\n    let sumtotal = 0\r\n    itemData.map((item)=>{\r\n        sumtotal += item.get_total\r\n    })\r\n\r\n    const submit = async() => {\r\n        await axios.post(`${BaseURL}address/`, myaddress, {\r\n            headers: {\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <br />\r\n            <div className='row'>\r\n                <div className='col-lg-12'>\r\n                    <div className='box-element'>\r\n                        <a className='btn btn-outline-dark' href=\"/cart/\">Back to Cart</a>\r\n                        <hr />\r\n                        <div className='order-summary'>\r\n                            <h4>Order Summary</h4>\r\n                            <h4 style={{'float': 'right','marginLeft':'500px'}}>Total : {sumtotal}</h4>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className='cart-box-element'>\r\n                        <div className=\"cart-row\">\r\n                        <div style={{flex: 2}}></div>\r\n                            <div style={{\"flex\":\"2\"}}><strong>Item</strong></div>\r\n                            <div style={{\"flex\":\"1\"}}><strong>Price</strong></div>\r\n                            <div style={{\"flex\":\"1\"}}><strong>Quantity</strong></div>\r\n                            <div style={{\"flex\":\"1\"}}><strong>Total</strong></div>\r\n                        </div>\r\n                        {\r\n                            itemData.map(item => (\r\n                                <div className='cart-row' key={item.item.id}>\r\n                                <div style={{flex: \"2\"}}><img className=\"row-image\" src={item.item.image}/></div>\r\n                                <div style={{flex: \"2\"}}>{item.item.title}</div>\r\n                                <div style={{flex: \"1\"}}>Rs {item.item.price}</div>\r\n                                <div style={{flex: \"1\"}}>\r\n                                <p className='quantity'>{item.quantity}</p>\r\n                                    \r\n                                </div>\r\n                                <div style={{flex: \"1\"}}>{item.quantity * item.item.price}</div>\r\n                                <h3></h3>\r\n                            </div>\r\n                            ))\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className='col-lg-12'>\r\n                    <div className='box-element' id='form-wrapper'>\r\n                        <form onSubmit={submit} id='form'>\r\n                            <div id='user-info'>\r\n                                <div className='form-field'>\r\n                                    <input type='text' name='name' placeholder='Name..'/>\r\n                                </div>\r\n                                <div className='form-field'>\r\n                                    <input type='email' name='email' placeholder='Email..'/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='shipping-info'>\r\n                                <hr/>\r\n                                <p>Shipping Information:</p>\r\n                                <hr/>\r\n                                <div className='form-field'>\r\n                                    <input onChange={e=> setMyAddress({...myaddress, address:e.target.value})} type='text' name='address' value={myaddress.address} placeholder='Address..' />\r\n                                </div>\r\n                                <div className='form-field'>\r\n                                    <input onChange={e => setMyAddress({...myaddress, city:e.target.value})} type='text' name='city' value={myaddress.city} placeholder='City..' />\r\n                                </div>\r\n                                <div className='form-field'>\r\n                                    <input onChange={e => setMyAddress({...myaddress, state:e.target.value})} type='text' name='state' value={myaddress.state} placeholder='State..' />\r\n                                </div>\r\n                                <div className='form-field'>\r\n                                    <input onChange={e => setMyAddress({...myaddress, zipcode:e.target.value})} type='text' name='zipcode' value={myaddress.zipcode} placeholder='Zipcode..' />\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                            <input className='btn btn-success btn-block' type='submit' value='Continue' />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                {\r\n                    prevAddress.map(addressitem => (\r\n                        <div key={addressitem.id} className='col-lg-4'>\r\n                            <div className='box-element product'>\r\n                                <h6> Address line: {addressitem.address}</h6>\r\n                                <h6>city: {addressitem.city}</h6>\r\n                                <h6>State: {addressitem.state}</h6>\r\n                                <h6>Zipcode: {addressitem.zipcode}</h6>\r\n                            </div>\r\n                            <br/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n     )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemData: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchitems: () => dispatch(fetchitems())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout)\r\n// export default Checkout","G:\\frontend\\src\\redux\\Action.js",[],"G:\\frontend\\src\\redux\\Actiontype.js",[],"G:\\frontend\\src\\reduxstore.js",[],"G:\\frontend\\src\\redux\\ActionReducer.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":49,"column":30,"nodeType":"95","messageId":"96","endLine":49,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":66,"column":20,"nodeType":"99","messageId":"100","endLine":66,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":104,"column":58,"nodeType":"103","endLine":104,"endColumn":112},{"ruleId":"101","severity":1,"message":"102","line":110,"column":41,"nodeType":"103","endLine":110,"endColumn":136},{"ruleId":"101","severity":1,"message":"102","line":111,"column":41,"nodeType":"103","endLine":111,"endColumn":138},{"ruleId":"104","severity":1,"message":"105","line":115,"column":33,"nodeType":"103","endLine":115,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":67,"column":29,"nodeType":"103","endLine":67,"endColumn":76},{"ruleId":"106","severity":1,"message":"107","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"110","severity":1,"message":"111","line":33,"column":40,"nodeType":"103","endLine":33,"endColumn":52},{"ruleId":"101","severity":1,"message":"102","line":68,"column":29,"nodeType":"103","endLine":68,"endColumn":76},{"ruleId":"110","severity":1,"message":"112","line":73,"column":33,"nodeType":"103","endLine":73,"endColumn":72},{"ruleId":"113","severity":1,"message":"114","line":33,"column":8,"nodeType":"115","endLine":33,"endColumn":10,"suggestions":"116"},{"ruleId":"97","severity":1,"message":"98","line":51,"column":24,"nodeType":"99","messageId":"100","endLine":51,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":88,"column":58,"nodeType":"103","endLine":88,"endColumn":108},{"ruleId":"104","severity":1,"message":"105","line":96,"column":33,"nodeType":"103","endLine":96,"endColumn":37},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchitems'. Either include it or remove the dependency array. If 'fetchitems' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [fetchitems]",{"range":"122","text":"123"},[1114,1116],"[fetchitems]"]