[{"G:\\frontend\\src\\index.js":"1","G:\\frontend\\src\\App.js":"2","G:\\frontend\\src\\reportWebVitals.js":"3","G:\\frontend\\src\\Cart.js":"4","G:\\frontend\\src\\Store.js":"5","G:\\frontend\\src\\Login.js":"6","G:\\frontend\\src\\Signup.js":"7","G:\\frontend\\src\\SignUp.js":"8"},{"size":503,"mtime":1611920079498,"results":"9","hashOfConfig":"10"},{"size":579,"mtime":1612092258044,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4580,"mtime":1611988735118,"results":"13","hashOfConfig":"10"},{"size":2669,"mtime":1611988568781,"results":"14","hashOfConfig":"10"},{"size":1786,"mtime":1612074288228,"results":"15","hashOfConfig":"10"},{"size":2159,"mtime":1612105217222,"results":"16","hashOfConfig":"10"},{"size":2159,"mtime":1612105217222,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11weeoh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\frontend\\src\\index.js",[],["37","38"],"G:\\frontend\\src\\App.js",[],"G:\\frontend\\src\\reportWebVitals.js",[],"G:\\frontend\\src\\Cart.js",["39","40","41","42","43","44","45","46"],"import React, {useState, useEffect} from 'react'\r\nimport arrowup from './arrow-up.png'\r\nimport arrowdown from './arrow-down.png'\r\nimport axios from 'axios'\r\nimport './App.css';\r\n\r\n\r\nfunction Cart() {\r\n\r\n    const[cart, setCart] = useState([])\r\n    const[total, setTotal] = useState('')\r\n\r\n    useEffect(() => {\r\n        getCartItems()\r\n    }, [])\r\n\r\n    function getCookie(name) {\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n      }\r\n\r\n    let csrftoken = getCookie('csrftoken')\r\n\r\n    const getCartItems = async() => {\r\n        const data = await axios.get('http://127.0.0.1:8000/api/cart/')\r\n        console.log(data.data.OrderItem)\r\n        await setCart(data.data.OrderItem)\r\n    }\r\n\r\n\r\n    const increaseItem = async(cartitem) => {\r\n        await axios.put(`http://127.0.0.1:8000/api/cart/${cartitem.id}/`, {quantity: cartitem.quantity+1, 'X-CSRFToken':csrftoken})\r\n        window.location.reload()\r\n    }\r\n\r\n    const decreaseItem = async(cartitem) => {\r\n        if(cartitem.quantity == 1){\r\n            await axios.delete(`http://127.0.0.1:8000/api/cart/${cartitem.id}/`, {'X-CSRFToken':csrftoken})\r\n        }else {\r\n            await axios.put(`http://127.0.0.1:8000/api/cart/${cartitem.id}/`, {quantity: cartitem.quantity-1, 'X-CSRFToken':csrftoken})\r\n        }\r\n        window.location.reload()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-lg-12'>\r\n                    <a className='btn btn-outline-dark' href='#'>&#x2190; Continue Ordering</a>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    \r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th><h5>Items: <strong></strong></h5></th>\r\n                                <th><h5>Total: <strong>{total}</strong></h5></th>\r\n                                <a style={{float: 'right', margin: '5px'}} className=\"btn btn-success\" href=\"#\">Checkout</a>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <div className='cart-box-element'>\r\n                    <div className='cart-row'>\r\n                    <div style={{flex: 2}}></div>\r\n                        <div style={{flex: 2}}><strong>Item</strong></div>\r\n                        <div style={{flex: 1}}><strong>Price</strong></div>\r\n                        <div style={{flex: 1}}><strong>Quantity</strong></div>\r\n                        <div style={{flex: 1}}><strong>Total</strong></div>\r\n                    </div>\r\n                    {\r\n                        cart.map(cartitem => (\r\n                            <div className='cart-row' key={cartitem.item.id}>\r\n                                <div style={{flex: \"2\"}}><img className=\"row-image\" src={cartitem.item.image}/></div>\r\n                                <div style={{flex: \"2\"}}>{cartitem.item.title}</div>\r\n                                <div style={{flex: \"1\"}}>{cartitem.item.price}</div>\r\n                                <div style={{flex: \"1\"}}>\r\n                                <p className='quantity'>{cartitem.quantity}</p>\r\n                                    <div className='quantity'>\r\n                                        <img onClick={() => increaseItem(cartitem)} className=\"chg-quantity update-cart\" src={arrowup}></img>\r\n                                        <img onClick={() => decreaseItem(cartitem)} className=\"chg-quantity update-cart\" src={arrowdown}></img>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{flex: \"1\"}}>{cartitem.quantity * cartitem.item.price}</div>\r\n                                <h3></h3>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","G:\\frontend\\src\\Store.js",["47","48","49","50","51"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './App.css';\r\n\r\n\r\nconst Store = () => {\r\n\r\n    \r\n\r\n    const[products, setProducts] = useState([])\r\n    const[id, setId] = useState('')\r\n    const[username, setUsername] = useState('')\r\n    const[authToken, setAuthToken] = useState('')\r\n    \r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n    }, [])\r\n\r\n\r\n    const getProducts = async() => {\r\n        \r\n        const data = await axios.get('http://127.0.0.1:8000/api/')\r\n        console.log(data.data)\r\n        setProducts(data.data.Item)\r\n        setId(data.data.User[0].id)\r\n        setUsername(data.data.User[0].username)\r\n        console.log(data.data.User[0].id)\r\n    }\r\n\r\n    function getCookie(name) {\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n      }\r\n\r\n    let csrftoken = getCookie('csrftoken')\r\n\r\n    const addToCart = async(slug, id) => {\r\n        await axios.post('http://127.0.0.1:8000/api/add-to-cart/', {slug, id},\r\n        {\r\n            headers:{\r\n                'Authorization': `Token ${authToken}`\r\n            }\r\n        }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                {\r\n                    products.map(product => (\r\n                        <div key={product.id} className='col-lg-4'>\r\n                            <img className='thumbnail' src={product.image}></img>\r\n                            <div className='box-element product'>\r\n                                <h6><strong>{product.title}</strong></h6>\r\n                                <hr></hr>\r\n                                <button onClick={()=>addToCart(product.slug, id)} className=\"btn btn-outline-secondary add-btn\">Add to Cart</button>\r\n                                <a className='btn btn-outline-success'>View</a>\r\n                                <h4 style={{display: \"inline-block\", float: \"right\"}}>{product.price}</h4>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","G:\\frontend\\src\\Login.js",[],"G:\\frontend\\src\\Signup.js",["52","53"],"G:\\frontend\\src\\SignUp.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":11,"column":18,"nodeType":"60","messageId":"61","endLine":11,"endColumn":26},{"ruleId":"62","severity":1,"message":"63","line":48,"column":30,"nodeType":"64","messageId":"65","endLine":48,"endColumn":32},{"ruleId":"66","severity":1,"message":"67","line":61,"column":21,"nodeType":"68","endLine":61,"endColumn":66},{"ruleId":"66","severity":1,"message":"67","line":71,"column":33,"nodeType":"68","endLine":71,"endColumn":113},{"ruleId":"69","severity":1,"message":"70","line":91,"column":58,"nodeType":"68","endLine":91,"endColumn":112},{"ruleId":"69","severity":1,"message":"70","line":97,"column":41,"nodeType":"68","endLine":97,"endColumn":136},{"ruleId":"69","severity":1,"message":"70","line":98,"column":41,"nodeType":"68","endLine":98,"endColumn":138},{"ruleId":"71","severity":1,"message":"72","line":102,"column":33,"nodeType":"68","endLine":102,"endColumn":37},{"ruleId":"58","severity":1,"message":"73","line":12,"column":11,"nodeType":"60","messageId":"61","endLine":12,"endColumn":19},{"ruleId":"58","severity":1,"message":"74","line":13,"column":22,"nodeType":"60","messageId":"61","endLine":13,"endColumn":34},{"ruleId":"58","severity":1,"message":"75","line":47,"column":9,"nodeType":"60","messageId":"61","endLine":47,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":65,"column":29,"nodeType":"68","endLine":65,"endColumn":76},{"ruleId":"66","severity":1,"message":"76","line":70,"column":33,"nodeType":"68","endLine":70,"endColumn":72},{"ruleId":"58","severity":1,"message":"77","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":33,"column":40,"nodeType":"68","endLine":33,"endColumn":52},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'setTotal' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'username' is assigned a value but never used.","'setAuthToken' is assigned a value but never used.","'csrftoken' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]