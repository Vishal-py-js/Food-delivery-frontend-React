[{"G:\\frontend\\src\\index.js":"1","G:\\frontend\\src\\App.js":"2","G:\\frontend\\src\\reportWebVitals.js":"3","G:\\frontend\\src\\Cart.js":"4","G:\\frontend\\src\\Store.js":"5","G:\\frontend\\src\\Login.js":"6","G:\\frontend\\src\\Signup.js":"7","G:\\frontend\\src\\SignUp.js":"8","G:\\frontend\\src\\Constants.js":"9","G:\\frontend\\src\\Sidebar.js":"10","G:\\frontend\\src\\CategorizedItem.js":"11"},{"size":503,"mtime":1612447039077,"results":"12","hashOfConfig":"13"},{"size":894,"mtime":1612769298648,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":4894,"mtime":1613045770136,"results":"16","hashOfConfig":"13"},{"size":2650,"mtime":1613046376417,"results":"17","hashOfConfig":"13"},{"size":1889,"mtime":1612973570000,"results":"18","hashOfConfig":"13"},{"size":2159,"mtime":1612105217222,"results":"19","hashOfConfig":"13"},{"size":2178,"mtime":1612709410167,"results":"20","hashOfConfig":"13"},{"size":265,"mtime":1613125437055,"results":"21","hashOfConfig":"13"},{"size":925,"mtime":1612868240590,"results":"22","hashOfConfig":"13"},{"size":2847,"mtime":1613123604977,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11weeoh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"G:\\frontend\\src\\index.js",[],["50","51"],"G:\\frontend\\src\\App.js",[],"G:\\frontend\\src\\reportWebVitals.js",[],"G:\\frontend\\src\\Cart.js",["52","53","54","55","56","57","58"],"import React, {useState, useEffect} from 'react'\r\nimport arrowup from './arrow-up.png'\r\nimport arrowdown from './arrow-down.png'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport BaseURL from './Constants'\r\n\r\n\r\nfunction Cart() {\r\n\r\n    const[cart, setCart] = useState([])\r\n\r\n    useEffect(() => {\r\n        getCartItems()\r\n        \r\n    }, [])\r\n\r\n\r\n    const getCartItems = async() => {\r\n        const data = await axios.get(`${BaseURL}order-items/`,{\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        // console.log(data.data)\r\n        document.getElementById(\"cart-total\").innerHTML = data.data.length\r\n        localStorage.setItem('item-count', data.data.length)\r\n        await setCart(data.data)\r\n        let innhtml = document.getElementById('user-status')\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = '<a href=\"/login\" class=\"btn btn-warning\">Logout</a>'\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        } else {\r\n            innhtml.innerHTML = \"LogIn\"\r\n        }\r\n    }\r\n\r\n\r\n    const increaseItem = async(cartitem) => {\r\n        await axios.put(`${BaseURL}cart/${cartitem.id}/`, {quantity: cartitem.quantity+1}, {\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        window.location.reload()\r\n    }\r\n\r\n    const decreaseItem = async(cartitem) => {\r\n        if(cartitem.quantity == 1){\r\n            await axios.delete(`${BaseURL}cart/${cartitem.id}/`, {\r\n                headers:{\r\n                    'Authorization': `Token ${localStorage.getItem('Token')}`\r\n                }\r\n            })\r\n        }else {\r\n            await axios.put(`${BaseURL}cart/${cartitem.id}/`, {quantity: cartitem.quantity-1}, {\r\n                headers:{\r\n                    'Authorization': `Token ${localStorage.getItem('Token')}`\r\n                }\r\n            })\r\n        }\r\n        window.location.reload()\r\n    }\r\n\r\n    let sumtotal = 0\r\n    cart.map((item)=>{\r\n        sumtotal += item.get_total\r\n    })\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-lg-12'>\r\n                    <a className='btn btn-outline-dark' href='/'>&#x2190; Continue Ordering</a>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    \r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th><h5>Items: <strong>{localStorage.getItem('item-count')}</strong></h5></th>\r\n                                <th><h5>Total: <strong>{sumtotal}</strong></h5></th>\r\n                                <a style={{float: 'right', margin: '5px'}} className=\"btn btn-success\" href=\"#\">Checkout</a>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <div className='cart-box-element'>\r\n                    <div className='cart-row'>\r\n                    <div style={{flex: 2}}></div>\r\n                        <div style={{flex: 2}}><strong>Item</strong></div>\r\n                        <div style={{flex: 1}}><strong>Price</strong></div>\r\n                        <div style={{flex: 1}}><strong>Quantity</strong></div>\r\n                        <div style={{flex: 1}}><strong>Total</strong></div>\r\n                    </div>\r\n                    {\r\n                        cart.map(cartitem => (\r\n                            <div className='cart-row' key={cartitem.item.id}>\r\n                                <div style={{flex: \"2\"}}><img className=\"row-image\" src={cartitem.item.image}/></div>\r\n                                <div style={{flex: \"2\"}}>{cartitem.item.title}</div>\r\n                                <div style={{flex: \"1\"}}>Rs {cartitem.item.price}</div>\r\n                                <div style={{flex: \"1\"}}>\r\n                                <p className='quantity'>{cartitem.quantity}</p>\r\n                                    <div className='quantity'>\r\n                                        <img onClick={() => increaseItem(cartitem)} className=\"chg-quantity update-cart\" src={arrowup}></img>\r\n                                        <img onClick={() => decreaseItem(cartitem)} className=\"chg-quantity update-cart\" src={arrowdown}></img>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{flex: \"1\"}}>{cartitem.quantity * cartitem.item.price}</div>\r\n                                <h3></h3>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","G:\\frontend\\src\\Store.js",["59"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport BaseURL from './Constants'\r\n\r\n\r\nconst Store = () => {\r\n\r\n    const[products, setProducts] = useState([])\r\n    const[id, setId] = useState('')\r\n    \r\n    \r\n    useEffect(() => {\r\n        getProducts()\r\n        getUser()\r\n    }, [])\r\n\r\n    const getProducts = async() => {\r\n        \r\n        const data = await axios.get(BaseURL)\r\n        // console.log(data.data)\r\n        setProducts(data.data.Item)\r\n    }\r\n\r\n    const getUser = async() => {\r\n        \r\n        const data = await axios.get(`${BaseURL}users/`,{\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        // console.log(data.data[0].id)\r\n        // console.log(data.data[0].username)\r\n        let user = data.data[0].username\r\n        setId(data.data[0].id)\r\n\r\n        document.getElementById('cart-total').innerHTML = localStorage.getItem('item-count')\r\n        let innhtml = document.getElementById('user-status')\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = `<strong>${user}</strong> <a href=\"/login\" class=\"btn btn-warning\">Logout</a>`\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        } \r\n    }\r\n\r\n\r\n    const addToCart = async(slug, id) => {\r\n        await axios.post(`${BaseURL}add-to-cart/`, {slug, id},\r\n        {\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        }\r\n            )\r\n        window.location.reload()\r\n    }\r\n\r\n    return ( \r\n        <div className='container' id=\"page-wrap\">\r\n            <div className='row'>\r\n                {\r\n                    products.map(product => (\r\n                        <div key={product.id} className='col-lg-3'>\r\n                            <img className='thumbnail' src={product.image}></img>\r\n                            <div className='box-element product'>\r\n                                <h6><strong>{product.title}</strong></h6>\r\n                                <hr></hr>\r\n                                <button onClick={()=>addToCart(product.slug, id)} className=\"btn btn-outline-secondary add-btn\">Add to Cart</button>\r\n                                {/* <a className='btn btn-outline-success'>View</a> */}\r\n                                <h6 id='price'>Rs {product.price}</h6>\r\n                            </div>\r\n                            <hr/>\r\n                        </div>\r\n                    ))   \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","G:\\frontend\\src\\Login.js",[],"G:\\frontend\\src\\Signup.js",["60","61"],"G:\\frontend\\src\\SignUp.js",[],"G:\\frontend\\src\\Constants.js",[],"G:\\frontend\\src\\Sidebar.js",[],"G:\\frontend\\src\\CategorizedItem.js",["62","63","64"],"import React, {useState, useEffect} from 'react'\r\nimport './App.css';\r\nimport axios from 'axios'\r\nimport BaseURL from './Constants'\r\n\r\n\r\nfunction CategorizedItem() {\r\n\r\n    const[filtereditems, setFilteredItems] = useState([])\r\n    const[userid, setUserId] = useState('')\r\n    const url = 'https://fullstackecom.herokuapp.com' //change this manually when deploying, since it is not the same as BaseURL\r\n\r\n    useEffect(() => {\r\n        \r\n        getItems()\r\n        getUser()\r\n    }, [])\r\n    \r\n    const getItems = () => {\r\n        let id = localStorage.getItem('sectionid')\r\n        axios.post(`${BaseURL}filteritem/`, {id: id})\r\n        .then(res => {\r\n            setFilteredItems(res.data)\r\n            // console.log(res.data)\r\n        })\r\n        document.getElementById('cart-total').innerHTML = localStorage.getItem('item-count')\r\n        let innhtml = document.getElementById('user-status')\r\n        if (localStorage.getItem('Token')) {\r\n            innhtml.innerHTML = '<a href=\"/login\" class=\"btn btn-warning\">Logout</a>'\r\n            innhtml.onclick = () => localStorage.removeItem('Token')\r\n        }\r\n    }\r\n\r\n    const getUser = async() => {\r\n        \r\n        const data = await axios.get(`${BaseURL}users/`,{\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        })\r\n        // console.log(data.data[0].id)\r\n        // console.log(data.data[0].username)        \r\n        setUserId(data.data[0].id)\r\n    }\r\n\r\n    const addToCart = async(product) => {\r\n        await axios.post(`${BaseURL}add-to-cart/`, {\r\n            slug: product.slug,\r\n            id: userid\r\n        },\r\n        {\r\n            headers:{\r\n                'Authorization': `Token ${localStorage.getItem('Token')}`\r\n            }\r\n        }\r\n            )\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div className='container' id=\"page-wrap\">\r\n            <div className='row'>\r\n                {\r\n                    filtereditems.map(product => (\r\n                        <div key={product.id} className='col-lg-4'>\r\n                            <img className='thumbnail' src={product.image}></img>\r\n                            <div className='box-element product'>\r\n                                <h6><strong>{product.title}</strong></h6>\r\n                                <hr></hr>\r\n                                <button onClick={()=>addToCart(product)} className=\"btn btn-outline-secondary add-btn\">Add to Cart</button>\r\n                                <a className='btn btn-outline-success'>View</a>\r\n                                <h6 id='price'>Rs {product.price}</h6>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategorizedItem\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":49,"column":30,"nodeType":"71","messageId":"72","endLine":49,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":66,"column":20,"nodeType":"75","messageId":"76","endLine":66,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":84,"column":33,"nodeType":"79","endLine":84,"endColumn":113},{"ruleId":"80","severity":1,"message":"81","line":104,"column":58,"nodeType":"79","endLine":104,"endColumn":112},{"ruleId":"80","severity":1,"message":"81","line":110,"column":41,"nodeType":"79","endLine":110,"endColumn":136},{"ruleId":"80","severity":1,"message":"81","line":111,"column":41,"nodeType":"79","endLine":111,"endColumn":138},{"ruleId":"82","severity":1,"message":"83","line":115,"column":33,"nodeType":"79","endLine":115,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":63,"column":29,"nodeType":"79","endLine":63,"endColumn":76},{"ruleId":"84","severity":1,"message":"85","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":33,"column":40,"nodeType":"79","endLine":33,"endColumn":52},{"ruleId":"84","severity":1,"message":"88","line":11,"column":11,"nodeType":"86","messageId":"87","endLine":11,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":66,"column":29,"nodeType":"79","endLine":66,"endColumn":76},{"ruleId":"77","severity":1,"message":"89","line":71,"column":33,"nodeType":"79","endLine":71,"endColumn":72},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]